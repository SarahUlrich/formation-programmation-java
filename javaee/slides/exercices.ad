= Exercices Programmation Java EE
:author: Arnaud Tournier
:email: ltearno@gmail.com
:toc: macro
:toc-title: Exercices de programmation avec Java EE
:source-highlighter: highlightjs

LTE Consulting (C) - 2016

toc::[]

== A lire pendant le pont du 14 juillet

Vous consulterez ceci :

- Tutoriel sur les http://blog.paumard.org/cours/servlet/[servlets et JSP] (de José Paumard) à lire *absolument* jusqu'à _Java Server Pages, 4. Utilisation de beans_
- https://openclassrooms.com/courses/developpez-des-sites-web-avec-java-ee?status=published[Développez des sites Web avec Java EE] chez Open Class Room,
- https://developer.mozilla.org/fr/docs/Web/Guide/HTML/Formulaires/Mon_premier_formulaire_HTML[Mon premier formulaire] de chez Mozilla Developper Network,
- https://openclassrooms.com/courses/creez-votre-application-web-avec-java-ee/formulaires-le-b-a-ba[Formulaire B-A BA] sur Open Class Rooms.

== Formulaire de connexion

Cet exercice vous permettra d'acquérir et d'être familier avec les notions suivantes :

- Servlet,
- JSP,
- Dispatch de servlet vers JSP,
- Attributs de requête,
- Session,
- Les formulaires HTML.

Il s'agit dans cette exercice de construire une mini application Web.

Son unique fonctionnalité est de permettre à l'utilisateur de renseigner son nom, et que l'application se souvienne de celui-ci lorsque l'utilisateur revient sur le site.

Notre application ne propose qu'une URL à l'utilisateur : `/home`.

Sur cette URL est branchée une servlet (que vous écrirez) qui implémente l'algorithme suivant :

image::exercice-jee-1.jpg[]

== Projet : Gestion d'un jeu de cartes

=== Première partie

Faire un CRUD sur une collection (`List`) de `Carte`.

L'utilisateur peut donc consulter la liste de cartes disponibles, les modifier, les supprimer et en ajouter.

=== Deuxième partie

Il s'agit maintenant de permettre à l'utilisateur de constituer une main.

Il a le droit d'avoir jusqu'à `Constantes.NB_MAX_CARTE_PAR_JEU`.

Il n'a pas le droit d'avoir plusieurs fois la même carte.

Donc nous stockerons sa main sous la forme d'un `Set<String>` qui contient les identifiants des cartes contenues dans son jeu.

==== Préparation

Déclarer la constante,

Prévoir le nom de l'attribut de la session qui va servir à stocker le `Set<String>`.

==== Implémentation

Dans la page qui permet de lister les cartes (celle développée auparavant), ajouter les boutons "AJOUTER A LA MAIN" et "RETIRER DE LA MAIN" qui seront affichés selon les cas (la carte est déjà dans la main ou pas).

Ensuite, écrire la page qui permet à l'utilisateur de visualiser son jeu.